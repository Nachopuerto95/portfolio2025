[
    {
		"web": true,
		"link": "https://fit-tracker.fly.dev/",
		"git": "https://github.com/nacho-alex/project-module-3",
		"images": ["/images/web1_fit/web1_01.png", "/images/web1_fit/web1_02.png", "/images/web1_fit/web1_03.png", "/images/web1_fit/web1_04.png","/images/web1_fit/web1_05.png", "/images/web1_fit/web1_06.png","/images/web1_fit/web1_07.png","/images/web1_fit/web1_08.png","/images/web1_fit/web1_09.png", "/images/web1_fit/web1_10.png", "/images/web1_fit/web1_11.png", "/images/web1_fit/web1_12.png", "/images/web1_fit/web1_13.png", "/images/web1_fit/web1_14.png", "/images/web1_fit/web1_15.png", "/images/web1_fit/web1_16.png"],
		"title": "Fit-Tracker - Seguimiento deportivo",
		"description": "Aplicaci칩n integral de seguimiento de fitness que permite a los usuarios gestionar rutinas de ejercicio, monitorear su alimentaci칩n y visualizar su progreso a trav칠s de gr치ficos intuitivos.",
		"caracteristicas": [
			{
				"name": "Seguimiento", 
				"lines": [
					"Registro de usuario con datos personales para c치lculo autom치tico de necesidades nutricionales",
					"Calendario interactivo con historial de actividades y alimentaci칩n"
				]
			},
			{
				"name": "Ejercicio", 
				"lines": [
					"Biblioteca de rutinas predefinidas seleccionables",
					"Registro de actividad f칤sica diaria",
					"Seguimiento de progreso mediante gr치ficas",
					"Personalizaci칩n de rutinas seg칰n perfil de usuario"
				]
			},
			{
				"name": "Nutrici칩n", 
				"lines": [
					"Registro de comidas y creaci칩n de biblioteca personal de alimentos",
					"C치lculo autom치tico del balance de calor칤as diarias",
					"Seguimiento de macronutrientes (prote칤nas, carbohidratos, grasas)"
				]
			}
		],
	"tags": ["JavaScript", "React", "Node.js", "MongoDB", "Docker", "HTML & CSS"] 
    },
	{
		"web": true,
		"link": "https://project-module2.fly.dev/",
		"git": "https://github.com/nacho-alex/project-module2",
		"images": ["/images/web2_reel/web2_01.png", "/images/web2_reel/web2_02.png", "/images/web2_reel/web2_03.png", "/images/web2_reel/web2_04.png", "/images/web2_reel/web2_05.png", "/images/web2_reel/web2_06.png", "/images/web2_reel/web2_07.png", "/images/web2_reel/web2_08.png", "/images/web2_reel/web2_09.png", "/images/web2_reel/web2_10.png"],
		"title": "Reelations - Red social de cine",
		"description": "Reelations es una red social dedicada a los amantes del cine que permite descubrir, catalogar y compartir experiencias cinematogr치ficas. Ofrece herramientas para organizar pel칤culas vistas o pendientes, interactuar con otros usuarios etc...  ",
		"caracteristicas": [
			{
				"name": "Descubrimiento Cinematogr치fico",
				"lines": [
				"Sistema de recomendaci칩n inteligente que sugiere pel칤culas aleatorias seg칰n preferencias y filtros aplicados por el usuario.",
				"Cat치logo completo filtrable por m칰ltiples criterios: g칠nero, a침o de lanzamiento, valoraci칩n de cr칤ticos y usuarios, duraci칩n, etc."
				]
			},
			{
				"name": "Organizaci칩n Personal",
				"lines": [
				"Creaci칩n de listas personalizadas (pel칤culas vistas, favoritas, pendientes) con posibilidad de compartirlas con otros usuarios."
				]
			},
			{
				"name": "Interacci칩n Social",
				"lines": [
				"Fichas detalladas de cada pel칤cula con informaci칩n t칠cnica, reparto, sinopsis y material promocional.",
				"Secci칩n de comentarios y valoraciones para compartir opiniones y generar debate con otros aficionados del cine."
				]
			}
		],
		"tags": ["JavaScript", "Node.js", "Handlebars", "HTML & CSS"]
	},
	{
	"link": "",
		"git": "https://github.com/Nachopuerto95/Restaurants_WEB",
		"web": true,
		"images": ["/images/web3_rest/web3_01.png", "/images/web3_rest/web3_02.png", "/images/web3_rest/web3_03.png", "/images/web3_rest/web3_04.png"],
		"title": "Beet it - Aplicaci칩n de restaurantes",
		"description": "Es una p치gina para buscar restaurantes por zona, puedes activar ubicaci칩n o escribir la que prefieras para ver la oferta de restaurantes, filtrar por categor칤a precio etc...",
		"caracteristicas": [
			{
				"name": "游뚾 EN DESARROLLO 游뚾"
			}
		],
		"tags": ["JavaScript", "React", "Node.js", "HTML & CSS", "Google APIs"]
	},
	{
		"link": "https://adventure-forest-nachopuerto.netlify.app/",
		"git": "https://github.com/Nachopuerto95/JUEGO-IRONHACK",
		"web": true,
		"images": ["/images/web4_game/web4_01.png", "/images/web4_game/web4_02.png", "/images/web4_game/web4_03.png", "/images/web4_game/web4_04.png", "/images/web4_game/web4_05.png", "/images/web4_game/web4_06.png", "/images/web4_game/web4_07.png"],
		"title": "Adventure forest - Endless runner game",
		"description": "Es un juego basado en el Dinosaurio de chrome pero con algunas mec치nicas que lo hacen bastante adictivo, es s칤mple y din치mico y su dificultad va en aumento",
		"caracteristicas": [
			{
				"name": "Caracter칤sticas",
				"lines": [
				"Se autogeneran enemigos y obst치culos, hay un tiempo l칤mite que se puede aumentar atrapando las frutas, a su vez todo el juego se acelera conforme avanza el jugador",
				"Tiene una interfaz, con instrucciones y tabla de puntuaciones local (utiliza LocalStorage)",
				"Sprites retro de el juego Adventure island 3 de SNES"
				]
			}
		],
		"tags": ["JavaScript", "POO", "HTML & CSS"]
	},
	{
		"git": "https://github.com/jpuerto-loruzqui/Cub3D",
		"images": ["/images/low1_cub/low1_00.png","/images/low1_cub/low1_02.gif", "/images/low1_cub/low1_01.gif", "/images/low1_cub/low1_03.gif", "/images/low1_cub/low1_04.gif", "/images/low1_cub/low1_05.png"],
		"title": "Cub3d - Algoritmo ray-casting en C",
		"description": "Cub3D es un proyecto de gr치ficos 3D donde se desarrolla un motor gr치fico basado en algoritmo de raycasting, inspirado en el cl치sico Wolfenstein 3D. El objetivo es crear un laberinto tridimensional navegable en primera persona con texturas, iluminaci칩n din치mica y control completo del personaje.",
		"caracteristicas": [
			{
				"name": "Motor de Raycasting",
				"lines": [
					"Implementaci칩n completa del algoritmo DDA (Digital Differential Analysis) para calcular distancias a paredes con precisi칩n",
					"Correcci칩n de la distorsi칩n de perspectiva (fish-eye) mediante transformaciones matem치ticas",
					"Renderizado optimizado para mantener un rendimiento fluido incluso en mapas complejos y gesti칩n eficiente de memoria con estructuras de datos minimalistas conforme a las normas de 42"
				]
			},
			{
				"name": "Renderizado 3D",
				"lines": [
					"Sistema de texturas para paredes con mapeo preciso seg칰n punto de impacto del rayo",
					"Efectos de iluminaci칩n din치mica con sombreado seg칰n distancia y orientaci칩n de las paredes"
				]
			}
		],
		"tags": ["C", "Algoritmia", "Design tools"]
	},
	{
		"git": "https://github.com/nachopuerto95/cpp",
		"images": ["/images/low2_cpp/low2_01.png"],
		"title": "C++ Piscine",
		"description": "Un conjunto de proyectos de CPP (cada uno consta de 3 a 5 ejercicios) en los que se exploran los fundamentos y conceptos avanzados de la Programaci칩n Orientada a Objetos (POO). El aprendizaje se estructura en dos bloques progresivos: el primero se centra en las bases de la POO y el segundo profundiza en plantillas, gesti칩n de memoria y la Standard Template Library (STL).",
		"caracteristicas": [
			{	
				"name": "M칩dulos 00-04: Fundamentos de C++ y POO",
				"lines": [
					"Transici칩n de C a C++, introduciendo conceptos como clases, constructores, destructores y el puntero 'this'.",
					"Gesti칩n de memoria din치mica con 'new' y 'delete', polimorfismo (sobrecarga de operadores y funciones) y la forma can칩nica de Coplien.",
					"Implementaci칩n de herencia y polimorfismo de subtipo a trav칠s de funciones virtuales y clases abstractas para construir jerarqu칤as de clases flexibles."
				]
			},
			{
				"name": "M칩dulos 05-09: C++ Avanzado y STL",
				"lines": [
					"Manejo robusto de errores mediante el sistema de excepciones (try, catch, throw).",
					"Introducci칩n a la programaci칩n gen칠rica con plantillas (templates) para crear c칩digo reutilizable y adaptable a diferentes tipos de datos.",
					"Dominio de la Standard Template Library (STL), incluyendo el uso de contenedores (vector, map, list), iteradores y algoritmos para resolver problemas complejos de manera eficiente."
				]
			}
		],
		"tags": ["C++", "POO", "C"]
	},
	{
		"git": "https://github.com/jpuerto-loruzqui/42Miinishell",
		"images": ["/images/low3_mini/low3_01.png", "/images/low3_mini/low3_02.png"],
		"title": "Minishell - Tu propio int칠rprete",
		"description": "Desarrollo de una r칠plica funcional de un int칠rprete de comandos de UNIX como bash. El proyecto consiste en parsear y ejecutar comandos introducidos por el usuario, gestionar procesos, redirecciones, pipes y se침ales, as칤 como implementar comandos internos (built-ins).",
		"caracteristicas": [
			{
				"name": "Parsing y Ejecuci칩n de Comandos",
				"lines": [
					"An치lisis de la entrada del usuario para interpretar comandos, argumentos, pipes y redirecciones.",
					"Gesti칩n de variables de entorno, comillas y caracteres especiales para un comportamiento similar a shells est치ndar."
				]
			},
			{
				"name": "Gesti칩n de Procesos y Flujos",
				"lines": [
					"Uso de 'fork', 'execve' y 'wait' para crear y gestionar procesos hijos que ejecutan comandos externos.",
					"Implementaci칩n de tuber칤as (|) para comunicar la salida de un proceso con la entrada de otro, y redirecciones de entrada/salida (<, >, <<, >>)."
				]
			},
			{
				"name": "Built-ins y Se침ales",
				"lines": [
					"Manejo de se침ales como Ctrl-C (SIGINT) y Ctrl-\\ (SIGQUIT) para una interacci칩n robusta con el usuario.",
					"Creaci칩n de comandos internos como 'echo', 'cd', 'pwd', 'export', 'unset', 'env' y 'exit' que se ejecutan directamente en el shell."
				]
			}
		],
		"tags": ["C", "Unix", "Shell", "Procesos", "Se침ales"]
	},
	{
		"git": "https://github.com/Nachopuerto95/inception",
		"images": ["/images/low4_inc/low4_01.png"],
		"title": "Inception - Docker compose para 42",
		"description": "Proyecto de administraci칩n de sistemas y virtualizaci칩n que consiste en desplegar una infraestructura de m칰ltiples servicios utilizando Docker. Se debe orquestar un conjunto de contenedores (Nginx, WordPress, MariaDB) para que funcionen como una aplicaci칩n web completa y segura.",
		"caracteristicas": [
			{
				"name": "Contenedorizaci칩n con Docker",
				"lines": [
					"Creaci칩n de im치genes personalizadas para cada servicio (Nginx, WordPress, MariaDB) a trav칠s de Dockerfiles.",
					"Configuraci칩n de redes y vol칰menes para garantizar la comunicaci칩n entre contenedores y la persistencia de los datos.",
					"Como parte del bonus implement칠 Adminer para consultar la Database, y FTP para transferir archivos entre m치quinas, adem치s de una p치gina est치tica (Yo realic칠 este portfolio para esa secci칩n)"
				]
			},
			{
				"name": "Orquestaci칩n y Despliegue",
				"lines": [
					"Uso de docker-compose para definir, configurar y gestionar el ciclo de vida de la aplicaci칩n multi-contenedor.",
					"Implementaci칩n de un servidor web Nginx con configuraci칩n TLS/SSL para asegurar las comunicaciones."
				]
			},
			{
				"name": "Administraci칩n de Servicios",
				"lines": [
					"Despliegue de una base de datos MariaDB y un gestor de contenidos WordPress, asegurando su correcta interconexi칩n.",
					"Configuraci칩n avanzada de servicios, incluyendo la gesti칩n de variables de entorno y secretos para la configuraci칩n."
				]
			}
		],
		"tags": ["Docker", "Docker-Compose", "Nginx", "WordPress", "Shell", "React", "JSON", "FTP", "Mysql" ]
	},
	{
		"git": "https://github.com/Nachopuerto95/philosophers",
		"images": ["/images/low5_phil/low5_01.png", "/images/low5_phil/low5_02.png"],
		"title": "Philosophers",
		"description": "Resoluci칩n del cl치sico problema de concurrencia de los fil칩sofos cenando. El objetivo es simular un escenario donde varios fil칩sofos deben compartir recursos (tenedores) sin caer en interbloqueos (deadlocks) ni inanici칩n, aprendiendo los fundamentos de la programaci칩n multihilo y la sincronizaci칩n.",
		"caracteristicas": [
			{
				"name": "Programaci칩n Multihilo",
				"lines": [
					"Creaci칩n y gesti칩n de m칰ltiples hilos (pthreads), donde cada hilo representa a un fil칩sofo.",
					"Sincronizaci칩n del ciclo de vida de los fil칩sofos (comer, dormir, pensar) para que se ejecuten de manera concurrente."
				]
			},
			{
				"name": "Sincronizaci칩n y Mutex",
				"lines": [
					"Uso de mutex (cerrojos de exclusi칩n mutua) para proteger los recursos compartidos (tenedores) y evitar condiciones de carrera.",
					"Implementaci칩n de un algoritmo que previene deadlocks, asegurando que el sistema pueda progresar indefinidamente."
				]
			},
			{
				"name": "Monitorizaci칩n y Precisi칩n",
				"lines": [
					"Medici칩n precisa del tiempo para controlar las acciones de los fil칩sofos y detectar si alguno muere de hambre.",
					"Desarrollo de un sistema de logs que muestra el estado de cada fil칩sofo en tiempo real sin interferir con la simulaci칩n."
				]
			}
		],
		"tags": ["C", "Multithreading", "Concurrencia", "Mutex", "Pthreads"]
	},
	{
	"git": "https://github.com/Nachopuerto95/push_swap",
	"images": ["/images/low6_pusw/low6_01.gif"],
	"title": "Push Swap",
	"description": "Un proyecto de algoritmia que consiste en ordenar una pila de n칰meros utilizando un conjunto limitado de operaciones y dos pilas (A y B). El desaf칤o es encontrar la secuencia de instrucciones m치s corta posible para ordenar los n칰meros, optimizando la eficiencia del algoritmo.",
	"caracteristicas": [
		{
		"name": "Manipulaci칩n de Pilas (Stacks)",
		"lines": [
			"Implementaci칩n de las operaciones permitidas: swap (sa, sb, ss), push (pa, pb), y rotate (ra, rb, rr, rra, rrb, rrr).",
			"Dise침o de estructuras de datos (listas enlazadas) para representar y manipular eficientemente las dos pilas."
		]
		},
		{
		"name": "Algoritmo de Ordenaci칩n",
		"lines": [
			"Desarrollo de un algoritmo eficiente para ordenar los n칰meros minimizando el n칰mero de movimientos.",
			"Estrategia de 'divide y vencer치s', moviendo los n칰meros de la pila A a la B de manera ordenada para luego devolverlos."
		]
		},
		{
		"name": "Optimizaci칩n y Eficiencia",
		"lines": [
			"Implementaci칩n de algoritmos como 'Turk Algorithm' o variantes para optimizar la selecci칩n de movimientos.",
			"Creaci칩n de un programa 'checker' que verifica si la secuencia de instrucciones generada ordena correctamente la pila."
		]
		}
	],
	"tags": ["C", "Algoritmia", "Estructura de Datos", "Optimizaci칩n"]
	}
]